'use client'
import { useEffect, useState } from 'react'; import Section from '../../components/Section'
function Tabs({tab,setTab}){ return (<div className="flex gap-3 border-b mb-4">{['pending','approved','rejected','donations'].map(t=>(<button key={t} onClick={()=>setTab(t)} className={'px-3 py-2 '+(tab===t?'border-b-2 border-blue-600 font-medium':'')}>{t}</button>))}</div>) }
export default function Admin(){ const [tab,setTab]=useState('pending'); const [rows,setRows]=useState([]); const [msg,setMsg]=useState(null)
  async function load(){ setMsg('Loading...'); if(tab==='donations'){ const r=await fetch('/api/admin/donations'); const d=await r.json(); if(!r.ok){ setMsg('Error: '+d.error); return } setRows(d.items); setMsg(null); return } const r=await fetch('/api/admin/memberships?status='+tab); const d=await r.json(); if(!r.ok){ setMsg('Error: '+d.error); return } setRows(d.items); setMsg(null) }
  useEffect(()=>{ load() },[tab])
  async function approve(id){ const r=await fetch('/api/admin/memberships/approve',{ method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ membership_id:id }) }); const d=await r.json(); if(!r.ok){ alert('Error: '+d.error); return } load() }
  async function reject(id){ const reason=prompt('Reason (optional)'); const r=await fetch('/api/admin/memberships/reject',{ method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ membership_id:id, reason }) }); const d=await r.json(); if(!r.ok){ alert('Error: '+d.error); return } load() }
  async function setDonation(id,status){ const r=await fetch('/api/admin/donations',{ method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ donation_id:id, status }) }); const d=await r.json(); if(!r.ok){ alert('Error: '+d.error); return } load() }
  return (<Section title="Admin"><Tabs tab={tab} setTab={setTab} />{msg && <p className="text-sm">{msg}</p>}{tab==='donations' ? (<table className="w-full text-sm border"><thead><tr className="bg-gray-50"><th className="th">Date</th><th className="th">Name</th><th className="th">Amount</th><th className="th">Txn</th><th className="th">Status</th><th className="th">Actions</th></tr></thead><tbody>{rows.map(r=>(<tr key={r.id}><td className="td">{new Date(r.created_at).toLocaleString()}</td><td className="td">{r.donor_name}</td><td className="td">₹{r.amount}</td><td className="td">{r.txn_id||'-'}</td><td className="td">{r.status}</td><td className="td"><button onClick={()=>setDonation(r.id,'verified')} className="px-2 py-1 rounded bg-green-600 text-white mr-2">Verify</button><button onClick={()=>setDonation(r.id,'rejected')} className="px-2 py-1 rounded bg-red-600 text-white">Reject</button></td></tr>))}</tbody></table>) : (<table className="w-full text-sm border"><thead><tr className="bg-gray-50"><th className="th">Date</th><th className="th">Name</th><th className="th">Member No</th><th className="th">Txn</th><th className="th">Status</th><th className="th">Actions</th></tr></thead><tbody>{rows.map(r=>(<tr key={r.id}><td className="td">{new Date(r.created_at).toLocaleString()}</td><td className="td">{r.full_name}</td><td className="td">{r.member_no||'-'}</td><td className="td">{r.txn_id||'-'} / ₹{r.txn_amount||0}</td><td className="td">{r.status}</td><td className="td">{tab==='pending' && (<><button onClick={()=>approve(r.id)} className="px-2 py-1 rounded bg-blue-600 text-white mr-2">Approve</button><button onClick={()=>reject(r.id)} className="px-2 py-1 rounded bg-red-600 text-white">Reject</button></>)}</td></tr>))}</tbody></table>)}</Section>) }
